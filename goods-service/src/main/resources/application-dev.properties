server.port=8980
server.servlet.context-path=/tmall
logging.config=classpath:log4j2-dev.xml

# mysql connect attribute
spring.datasource.master.jdbc-url=jdbc:mysql://192.168.6.130:3306/technology_mall_goods?characterEncoding=utf-8
spring.datasource.master.username=root
spring.datasource.master.password=root
spring.datasource.master.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.slave1.jdbc-url=jdbc:mysql://192.168.6.131:3306/technology_mall_goods?characterEncoding=utf-8
spring.datasource.slave1.username=root
spring.datasource.slave1.password=root
spring.datasource.slave1.driver-class-name=com.mysql.jdbc.Driver

# Hikari will use the above plus the following to setup connection pooling
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=DatebookHikariCP
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1

#分页插件
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

# FREEMARKER (FreeMarkerAutoConfiguration)
spring.freemarker.allow-request-override=false
spring.freemarker.allow-session-override=false
spring.freemarker.cache=true
spring.freemarker.check-template-location=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=true
spring.freemarker.suffix=.html
spring.freemarker.template-loader-path=classpath:/templates/
spring.freemarker.settings.template_update_delay=0
spring.freemarker.settings.default_encoding=UTF-8
spring.freemarker.settings.classic_compatible=true
spring.freemarker.order=1

#springboot charset filter
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

## Elasticsearch配置文件（必须）
## 该配置和Elasticsearch的elasticsearch.yml中的配置信息有关
spring.data.elasticsearch.cluster-name=my-application
spring.data.elasticsearch.cluster-nodes=192.168.6.130:9300
#是否开启本地存储
spring.data.elasticsearch.repositories.enable=true

#分布式雪花id生成策略
snowflakeid.worker=0
snowflakeid.datacenter=1

#spring cloud
spring.application.name=goods-service
eureka.client.serviceUrl.defaultZone=http://localhost:8999/eureka/

# redis
# Redis服务器地址
spring.redis.host=192.168.6.130
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=12345
spring.redis.database=1
spring.redis.timeout=0



# 分布式文件系统FDFS配置
#socket连接超时时长
fdfs.so-timeout=1500
#连接tracker服务器超时时长
fdfs.connect-timeout=600
#缩略图生成参数，可选
fdfs.thumb-image.height=150
fdfs.thumb-image.width=150

#nginx访问地址
fdfs.reqHost: 192.168.8.130
fdfs.reqPort: 80  

#TrackerList参数,支持多个，我这里只有一个，如果有多个在下方加- x.x.x.x:port
fdfs.tracker-list=- 192.168.8.130:22122
- 192.168.8.131:22122

# 最大支持文件大小
spring.servlet.multipart.max-file-size=100MB
# 最大支持请求大小
spring.servlet.multipart.max-request-size=100MB


